# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ video-indexer ]
  pull_request:
    branches: [ video-indexer ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  APP_NAME: kmvi
  AZURE_WEBAPP_PACKAGE_PATH: '.'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build
  build-infrastructure:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      ResourceGroupLocation: AustraliaEast
      ResourceGroupName: KnowledgeMining-RG

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/CLI@v1
        with:
          inlineScript: |
            #!/bin/bash
            if $(az group exists --name ${{ env.ResourceGroupName }}) ; then
              echo "Azure resource group already exists, skipping creation..."
            else
              az group create --name ${{ env.ResourceGroupName }} --location ${{ env.ResourceGroupLocation }}
              echo "Azure resource group created"
            fi

      - uses: azure/arm-deploy@v1
        id: deploy
        with:
          resourceGroupName: ${{ env.ResourceGroupName }}
          template: ./azuredeploy.json
          parameters: resourcePrefix=${{env.APP_NAME}} location=${{env.ResourceGroupLocation}} videoIndexerApiKey=${{secrets.VIDEO_INDEXER_API_KEY}}
          deploymentMode: complete 
      
      - run: echo ${{ steps.deploy.outputs.appName }}

  build-webapp:
    needs: build-infrastructure
    runs-on: ubuntu-latest
    env: 
      SITE_NAME: ${{needs.deploy.outputs.appName}}
    steps:
    - run: |
        echo "Site name = ${{env.SITE_NAME}}"

    - uses: actions/checkout@v2

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: "3.1.x"

    - run: |
        dotnet build -c Release "./02 - Web UI Template/CognitiveSearch.Template.sln"
        dotnet publish -c Release "./02 - Web UI Template/CognitiveSearch.Template.sln" -o ${{env.AZURE_WEBAPP_PACKAGE_PATH}}/${{env.APP_NAME}}

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - uses: azure/webapps-deploy@v2
      with:
        app-name: ${{env.APP_NAME}}-site
        package: '${{env.AZURE_WEBAPP_PACKAGE_PATH}}/${{env.APP_NAME}}'

  build-video:
    needs: build-infrastructure
    runs-on: ubuntu-latest
    env: 
      AZURE_FUNCTIONAPP_NAME: kmvi-function-app
      AZURE_FUNCTIONAPP_PACKAGE_PATH: ./01.5 - Video Indexer
    steps: 
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v1
      with: 
        python-version: "3.8"

    - name: 'Resolve dependences'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target=".python_packages/lib/site-packages"
        popd

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

